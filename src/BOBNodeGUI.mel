global proc importBrick(string $node, string $brickObj, string $attrArr) {
  string $importArr[] = file("-import", "-rnn", "/Users/kathrynmiller/Documents/MayaPlugins/BOBPlugin/brick-optimization-builder/src/objs/" + $brickObj);
  //string $importArr[] = file("-import", "-rnn", "/Users/dzungnguyen/OneDrive - PennO365/classes/cis660/brick-optimization-builder/src/objs/" + $brickObj);
  for($brick in $importArr) {
      if ( `nodeType $brick` == "transform" ) {
          print ($brick);
          string $instancer = instancer();
          connectAttr ($brick + ".matrix") ($instancer + ".inputHierarchy[0]");
          connectAttr ($node + "." + $attrArr) ($instancer + ".inputPoints");
      }
  }
}

global proc createBOBNode() {
    string $selected[] = `ls -sl`;
    if (size($selected) == 1)
    {
        string $bob = createNode("BOBNode");
        string $mesh = $selected[0];
        
        // Creating the target output mesh
        string $target = createNode("transform");
        string $targetMesh = createNode("mesh");
        sets -add "initialShadingGroup" $targetMesh;

        // Connect the attributes.
        connectAttr ($mesh + ".outMesh") ($bob + ".inputMesh");
        connectAttr( $bob + ".outputMesh") ($targetMesh + ".inMesh");
        
        // import base bricks and attach to data arr attr of the node for visualization
        importBrick($bob, "1x1.obj", "oneXone");
        importBrick($bob, "1x2.obj", "oneXtwo");
        importBrick($bob, "1x3.obj", "oneXthree");
        importBrick($bob, "1x4.obj", "oneXfour");
        importBrick($bob, "1x6.obj", "oneXsix");
        importBrick($bob, "1x8.obj", "oneXeight");

        importBrick($bob, "2x2.obj", "twoXtwo");
        importBrick($bob, "2x3.obj", "twoXthree");
        importBrick($bob, "2x4.obj", "twoXfour");
        importBrick($bob, "2x6.obj", "twoXsix");
        importBrick($bob, "2x8.obj", "twoXeight");
    } else {
        error "Please select exactly one mesh"; 
    }
}
