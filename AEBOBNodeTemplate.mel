

//=====================================================================================================================//
// Initialize																					
//
//=====================================================================================================================//

global proc AEInitializeBuild (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];

	//------------------------------------------------------------------------------------------------------------------//
	// Attribute controls and buttons																					//
	//------------------------------------------------------------------------------------------------------------------//

		//--------------------------------------------------------------------------------------------------------------//
		// User instructions / description																				//
		//--------------------------------------------------------------------------------------------------------------//

		separator -style none;
		text -l "To create a LEGO layout of your mesh, first initialize it";
		separator -style none;

	string $initCmd = "editorTemplate -dimControl " + $nodeName + " InitializeButton true; \
					     button -e -enable false InitializeButton; \
					     button -e -enable true ExportButton; \
					     editorTemplate -dimControl " + $nodeName + " ExportButton false; \
					     setAttr -type \"string\" " + $nodeName + ".stabilityStatus \"Initializing...\";";

	button -label "Initialize" -enable true -c $initCmd InitializeButton;
}

global proc AEInitializeUpdate (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];
	string $initCmd = "";

	// dim/undim attribute fields based on nodeStage
	string $stage = `getAttr ($nodeName + ".stabilityStatus")`;
	if ($stage == "Uninitialized") {
		editorTemplate -dimControl $nodeName InitializeButton false;
		button -e -enable true InitializeButton;
		string $initCmd = "editorTemplate -dimControl " + $nodeName + " InitializeButton true; \
					     button -e -enable false InitializeButton; \
					     button -e -enable true ExportButton; \
					     editorTemplate -dimControl " + $nodeName + " ExportButton false; \
					     setAttr -type \"string\" " + $nodeName + ".stabilityStatus \"Initializing...\";";

	} else { // do nothing, node has already been initialized
		editorTemplate -dimControl $nodeName InitializeButton true;
		button -e -enable false InitializeButton;
		$initCmd = "";
	} 

	button -edit -c $initCmd InitializeButton;
}



//=====================================================================================================================//
// Export																					
//
//=====================================================================================================================//

global proc openFileDialog(string $nodeName) {
	
	string $filename1 = fileDialog("-dm", "*.pdf", "-mode", 1);
	if ($filename1 != "")
	{
	    setAttr -type "string" ($nodeName + ".stabilityStatus") "Exporting...";
	}

}

global proc AEExportBuild (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];

	//------------------------------------------------------------------------------------------------------------------//
	// Attribute controls and buttons																					//
	//------------------------------------------------------------------------------------------------------------------//

		//--------------------------------------------------------------------------------------------------------------//
		// User instructions / description																				//
		//--------------------------------------------------------------------------------------------------------------//

		separator -style none;
		text -l "Export LEGO layout as a PDF";
		separator -style none;

	string $exportCmd = "openFileDialog(" + $nodeName + ");";

	button -label "Export Layout" -enable false -c $exportCmd ExportButton;
}

global proc AEExportUpdate (string $nodeNameArr) {

	// do nothing, same process 
}

//=====================================================================================================================
//
// Iterate																					
//
//=====================================================================================================================


global proc AEIterateBuild (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];

	//------------------------------------------------------------------------------------------------------------------//
	// Attribute controls and buttons																					//
	//------------------------------------------------------------------------------------------------------------------//

	string $iterCmd = "editorTemplate -dimControl " + $nodeName + " IterateButton true; \
					     button -e -enable false IterateButton; \
					     setAttr -type \"string\" " + $nodeName + ".stabilityStatus \"Computing...\";";
	button -label "Iterate" -enable false -c $iterCmd IterateButton;
	editorTemplate -dimControl " + $nodeName + " IterateButton true; 
}

global proc AEIterateUpdate (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];
	string $iterCmd = "";

	// dim/undim attribute fields based on nodeStage
	string $stage = `getAttr ($nodeName + ".stabilityStatus")`;
	if ($stage == "Uninitialized") {
		editorTemplate -dimControl $nodeName IterateButton true;
		button -e -enable false IterateButton;
		string $iterCmd = "";

	} else { // allow the user to iterate since initialization has been completed
		editorTemplate -dimControl $nodeName IterateButton false;
		button -e -enable true IterateButton;
		string $iterCmd = "editorTemplate -dimControl " + $nodeName + " IterateButton true; \
					     button -e -enable false InitializeButton; \
					     setAttr -type \"string\" " + $nodeName + ".stabilityStatus \"Computing...\";";
	} 

	button -e -c $iterCmd IterateButton;
}

//=====================================================================================================================//
// Constraint Dropdown 																			
//=====================================================================================================================//

global proc string switchColorVal(string $nodeName) {

	string $curr = `getAttr ($nodeName + ".colorConstraint")`;
	if($curr == "HARD") {
		return "SOFT"; 
	} else {
		return "HARD"; 
	}
}

global proc AEColorConstraintBuild (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];

	//-----------------------------------------------------------------------------------------------------------------//
	// Attribute controls and buttons																				
	//
	//-----------------------------------------------------------------------------------------------------------------//

    string $onChange = "setAttr -type \"string\" " + $nodeName + ".colorConstraint " + switchColorVal($nodeName);
	optionMenuGrp -label "Color Constraint" -cc $onChange colorMenu;
	menuItem -label "SOFT"; 
	menuItem -label "HARD";  


}

global proc AEColorConstraintUpdate (string $nodeNameArr) {

	// get node name
	string $buffer[];
	tokenize($nodeNameArr,".",$buffer);
	string $nodeName = $buffer[0];

	//-----------------------------------------------------------------------------------------------------------------//
	// Attribute controls and buttons																				
	//
	//-----------------------------------------------------------------------------------------------------------------//

	string $stage = `getAttr ($nodeName + ".colorConstraint")`;
	if ($stage == "HARD") {
		optionMenuGrp -e -value "HARD" colorMenu;
	} else {
		optionMenuGrp -e -value "SOFT" colorMenu;
	}
}


global proc AEBOBNodeTemplate( string $nodeName ) {

	editorTemplate -beginLayout "BOBNode" -collapse false;

	editorTemplate -suppress "caching";
	editorTemplate -suppress "frozen";
	editorTemplate -suppress "nodeState";
	editorTemplate -suppress "colorConstraint";
	editorTemplate -suppress "outputMesh";
	editorTemplate -suppress "inputMesh";
	editorTemplate -suppress "oneXone";
	editorTemplate -suppress "oneXtwo";
	editorTemplate -suppress "oneXthree";
	editorTemplate -suppress "oneXfour";
	editorTemplate -suppress "oneXsix";
	editorTemplate -suppress "oneXeight";
	editorTemplate -suppress "twoXtwo";
	editorTemplate -suppress "twoXthree";
	editorTemplate -suppress "twoXfour";
	editorTemplate -suppress "twoXsix";
	editorTemplate -suppress "twoXeight";

	editorTemplate -addControl "inputMeshName";
	editorTemplate -addControl "meshTexture";
	editorTemplate -addControl "stabilityStatus";

	editorTemplate -addSeparator;

	editorTemplate -beginLayout "Initialization" -collapse false;
		editorTemplate -callCustom "AEInitializeBuild" "AEInitializeUpdate" $nodeName;
	editorTemplate -endLayout;
	
	editorTemplate -addSeparator;

	editorTemplate -beginLayout "Layout Settings" -collapse false;
		editorTemplate -addControl "useMeshColors";
		editorTemplate -callCustom "AEColorConstraintBuild" "AEColorConstraintUpdate" $nodeName;	
	editorTemplate -endLayout;

	editorTemplate -addSeparator;

	editorTemplate -callCustom "AEExportBuild" "AEExportUpdate" $nodeName;
	//editorTemplate -callCustom "AEIterateBuild" "AEIterateUpdate" $nodeName;

	editorTemplate -endLayout;
}